name: Test and Release

on:
  push:
    branches: ['**']  # Run on all branches
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install paramiko
      
      - name: Run unit tests with test data
        run: |
          python tests/run_tests.py || exit 0
          echo "Note: Some tests may require real switch connectivity"
      
      - name: Compile all Python files
        run: |
          python -m compileall custom_components/hp_aruba_switch/
      
      - name: Validate manifest.json
        run: |
          python -c "import json; json.load(open('custom_components/hp_aruba_switch/manifest.json'))"
          echo "‚úÖ manifest.json is valid"

  release:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Extract version from manifest
        id: get_version
        run: |
          VERSION=$(python -c "import json; print(json.load(open('custom_components/hp_aruba_switch/manifest.json'))['version'])")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
          echo "üì¶ Version: $VERSION"
          echo "üè∑Ô∏è  Tag: v$VERSION"
      
      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v${{ steps.get_version.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è  Tag v${{ steps.get_version.outputs.version }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "‚úÖ Tag v${{ steps.get_version.outputs.version }} does not exist yet"
          fi
      
      - name: Create Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.tag }}
          name: Release ${{ steps.get_version.outputs.tag }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Release created
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          echo "üéâ Release ${{ steps.get_version.outputs.tag }} created successfully!"
      
      - name: Release skipped
        if: steps.check_tag.outputs.exists == 'true'
        run: |
          echo "‚ÑπÔ∏è  Release ${{ steps.get_version.outputs.tag }} already exists, skipping release creation"
